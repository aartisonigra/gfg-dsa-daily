Given an integer array arr[]. Find the number of triangles that can be formed with three different array elements as lengths of three sides of the triangle. A triangle with three given sides is only possible if sum of any two sides is always greater than the third side.

Examples:

Input: arr[] = [4, 6, 3, 7]
Output: 3
Explanation: There are three triangles possible [3, 4, 6], [4, 6, 7] and [3, 6, 7]. Note that [3, 4, 7] is not a possible triangle.  
Input: arr[] = [10, 21, 22, 100, 101, 200, 300]
Output: 6
Explanation: There can be 6 possible triangles: [10, 21, 22], [21, 100, 101], [22, 100, 101], [10, 100, 101], [100, 101, 200] and [101, 200, 300].
Input: arr[] = [1, 2, 3]
Output: 0
Explanation: No triangles are possible.

  SOLUTIONS:

import java.util.Arrays;

public class Solution {

    // Main logic: O(n^2), Space: O(1) (sorting in-place)
    public int countTriangles(int[] arr) {
        int n = arr.length;
        if (n < 3) return 0;

        Arrays.sort(arr);

        long count = 0; // long ताकि बड़े inputs में overflow न हो
        for (int k = n - 1; k >= 2; k--) {     // arr[k] = सबसे बड़ा side
            int i = 0, j = k - 1;
            while (i < j) {
                // sum को long में cast ताकि addition overflow न करे
                if ((long) arr[i] + arr[j] > arr[k]) {
                    // arr[i..j-1] में हर element, arr[j] और arr[k] के साथ triangle बनाएगा
                    count += (j - i);
                    j--; // j को छोटा करें (क्योंकि bigger j already काम कर चुका)
                } else {
                    i++; // sum बढ़ाने के लिए i बढ़ाएँ
                }
            }
        }
        return (int) count; // Problem int माँगता है, वरना long return कर सकते हैं
    }

    // Quick test
    public static void main(String[] args) {
        Solution s = new Solution();
        System.out.println(s.countTriangles(new int[]{4, 6, 3, 7}));                // 3
        System.out.println(s.countTriangles(new int[]{10, 21, 22, 100, 101, 200, 300})); // 6
        System.out.println(s.countTriangles(new int[]{1, 2, 3}));                   // 0
    }
}
