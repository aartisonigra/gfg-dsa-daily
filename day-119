A celebrity is a person who is known to all but does not know anyone at a party. A party is being organized by some people. A square matrix mat[][] of size n*n is used to represent people at the party such that if an element of row i and column j is set to 1 it means ith person knows jth person. You need to return the index of the celebrity in the party, if the celebrity does not exist, return -1.

Note: Follow 0-based indexing.

Examples:

Input: mat[][] = [[1, 1, 0],
                [0, 1, 0],
                [0, 1, 1]]
Output: 1
Explanation: 0th and 2nd person both know 1st person and 1st person does not know anyone. Therefore, 1 is the celebrity person.
Input: mat[][] = [[1, 1], 
                [1, 1]]
Output: -1
Explanation: Since both the people at the party know each other. Hence none of them is a celebrity person.
Input: mat[][] = [[1]]
Output: 0

  SOLUTIONS:

class Solution {
    public int celebrity(int mat[][]) {
        if (mat == null || mat.length == 0) return -1;
        int n = mat.length;

        // 1) Find a candidate using two pointers
        int a = 0, b = n - 1;
        while (a < b) {
            if (mat[a][b] == 1) {
                // a knows b -> a can't be celebrity
                a++;
            } else {
                // a doesn't know b -> b can't be celebrity
                b--;
            }
        }
        int cand = a; // possible celebrity

        // 2) Verify candidate:
        //    - candidate should not know anyone else (mat[cand][j] == 0 for j != cand)
        //    - everyone else should know candidate (mat[i][cand] == 1 for i != cand)
        for (int i = 0; i < n; i++) {
            if (i == cand) continue;           // ignore self (diagonal)
            if (mat[cand][i] == 1) return -1;  // candidate knows someone -> invalid
            if (mat[i][cand] == 0) return -1;  // someone doesn't know candidate -> invalid
        }

        return cand;
    }

    // Optional: simple test
    public static void main(String[] args) {
        Solution s = new Solution();
        int[][] mat1 = {{1,1,0},{0,1,0},{0,1,1}};
        System.out.println(s.celebrity(mat1)); // 1

        int[][] mat2 = {{1,1},{1,1}};
        System.out.println(s.celebrity(mat2)); // -1

        int[][] mat3 = {{1}};
        System.out.println(s.celebrity(mat3)); // 0
    }
}
