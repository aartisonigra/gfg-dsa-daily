Power of k in factorial of n
Difficulty: MediumAccuracy: 47.66%Submissions: 3K+Points: 4
Given two positive integers n and k, determine the highest value of x such that kx divides n! (n factorial) completely (i.e., n % (kx) == 0).

Examples :

Input: n = 7, k = 2
Output: 4
Explanation: 7! = 5040, and 24 = 16 is the highest power of 2 that divides 5040.
Input: n = 10, k = 9
Output: 2
Explanation: 10! = 3628800, and 9Â² = 81 is the highest power of 9 that divides 3628800.


  SOLUTIONS:

import java.util.*;

class Solution {
    
    // Helper to get prime factorization of k
    private Map<Integer, Integer> primeFactorization(int k) {
        Map<Integer, Integer> factors = new HashMap<>();
        for (int i = 2; i * i <= k; i++) {
            while (k % i == 0) {
                factors.put(i, factors.getOrDefault(i, 0) + 1);
                k /= i;
            }
        }
        if (k > 1) {
            factors.put(k, factors.getOrDefault(k, 0) + 1);
        }
        return factors;
    }
    
    // Helper to compute power of prime p in n!
    private int powerInFactorial(int n, int p) {
        int count = 0;
        while (n > 0) {
            n /= p;
            count += n;
        }
        return count;
    }

    public int maxKPower(int n, int k) {
        Map<Integer, Integer> factors = primeFactorization(k);
        int minPower = Integer.MAX_VALUE;

        for (Map.Entry<Integer, Integer> entry : factors.entrySet()) {
            int prime = entry.getKey();
            int exponent = entry.getValue();
            int power = powerInFactorial(n, prime);
            minPower = Math.min(minPower, power / exponent);
        }

        return minPower;
    }
}
