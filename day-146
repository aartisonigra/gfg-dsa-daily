Given an integer n. You need to generate all the binary strings of n characters representing bits.

Note: Return the strings in  ascending order.

Examples:

Input: n = 2
Output: [00, 01, 10, 11]
Explanation: As each position can be either 0 or 1, the total possible combinations are 4.
Input: n = 3
Output: [000, 001, 010, 011, 100, 101, 110, 111]
Explanation: As each position can be either 0 or 1, the total possible combinations are 8.

  SOLUTIONS:

import java.util.*;

class Solution {
    public ArrayList<String> binstr(int n) {
        ArrayList<String> result = new ArrayList<>();
        int total = 1 << n;  // 2^n combinations
        
        for (int i = 0; i < total; i++) {
            // Convert i to binary string and pad with leading zeros
            String binary = String.format("%" + n + "s", Integer.toBinaryString(i)).replace(' ', '0');
            result.add(binary);
        }
        
        return result;
    }
}
